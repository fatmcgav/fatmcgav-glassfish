#! /bin/bash

### BEGIN INIT INFO
# Provides:		glassfishv<%= scope.lookupvar('glassfish::glassfish_version') %>
# Required-Start:	$network $local_fs $remote_fs
# Required-Stop:
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	Oracle Glassfish Java EE Application Server ver. <%= scope.lookupvar('glassfish::glassfish_version') %>
### END INIT INFO

USER=<%= @runuser %>
GLASSFISHPATH=<%= scope.lookupvar('glassfish::glassfish_dir') %>/glassfish/bin
__NAME="Oracle Glassfish Java EE Application Server ver. <%= scope.lookupvar('glassfish::glassfish_version') %>"

test -x ${GLASSFISHPATH}/asadmin || exit 2

. /lib/lsb/init-functions

function procStart() {
	# Make sure only root can run our script
		if [[ $EUID -ne 0 ]]; then
			echo "This script must be run as root" 1>&2
		exit 1
	fi
	log_daemon_msg "Starting $__NAME"
	_isOk=0
	sudo -u $USER $GLASSFISHPATH/asadmin start-domain > /dev/null
	if [[ $? -ne 0 ]]; then
		_isOk=2
	fi
	log_end_msg $_isOk
	return $_isOk
}

function procStatus() {
	# Make sure only root can run our script
	if [[ $EUID -ne 0 ]]; then
		echo "This script must be run as root" 1>&2
		exit 1
	fi
	sudo -u $USER ${GLASSFISHPATH}/asadmin list-domains | grep run | grep -v not > /dev/null
	if [[ $? -ne 0 ]]; then
		log_failure_msg "$__NAME is not running"
		return $?
	fi
	log_success_msg "$__NAME is running"
	return 0
}

function procStop() {
	# Make sure only root can run our script
	if [[ $EUID -ne 0 ]]; then
		echo "This script must be run as root" 1>&2
		exit 1
	fi
	log_daemon_msg "Stoping $__NAME"
	_isOk=0
	sudo -u $USER ${GLASSFISHPATH}/asadmin stop-domain > /dev/null
	if [[ $? -ne 0 ]]; then
		_isOk=3
	fi
	log_end_msg $_isOk
	return $_isOk
}

case "$1" in
	start)
		procStart
		exit $?
	;;
	stop)
		procStop
		exit $?
	;;
	status)
    procStatus
    exit $?
  ;;
	restart)
		procStop
		if test "$?" != "0"; then
		    exit 3
		fi
		procStart
		exit $?
	;;
	*)
		echo $"usage: $0 {start|stop|status|restart}"
		exit 1
esac
